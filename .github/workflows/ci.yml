# *************************** In The Name Of God ***************************
# * @file    ci.yml
# * @brief   Continuous Integration workflow for WPT project
# * @author  Dr.-Ing. Hossein Abedini
# * @date    2025-06-08
# * GitHub Actions workflow for automated building and testing of power
# * electronics modules using Digital Mars Compiler on Windows.
# * @note    Designed for real-time signal processing applications.
# * @license This work is dedicated to the public domain under CC0 1.0.
# *          Please use it for good and beneficial purposes!
# ***************************************************************************

name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PowerShell
      shell: powershell
      run: |
        Write-Host "PowerShell version: $($PSVersionTable.PSVersion)" -ForegroundColor Green
        Write-Host "OS version: $([System.Environment]::OSVersion)" -ForegroundColor Green
    
    - name: Install Digital Mars Compiler
      shell: powershell
      run: |
        Write-Host "Setting up Digital Mars Compiler..." -ForegroundColor Cyan
        .\scripts\setup_compiler.ps1 -Quiet
        if ($LASTEXITCODE -ne 0) {
          throw "Failed to setup Digital Mars Compiler"
        }
    
    - name: Install LLVM (clang-format, clang-tidy)
      uses: KyleMayes/install-llvm-action@v2
      with:
        version: "17.0"
        directory: ${{ runner.temp }}/llvm
    
    - name: Validate Project Structure
      shell: powershell
      run: |
        Write-Host "Validating project structure..." -ForegroundColor Cyan
        $requiredDirs = @("modules", "config", "scripts")
        foreach ($dir in $requiredDirs) {
          if (-not (Test-Path $dir)) {
            throw "Required directory '$dir' not found"
          }
          Write-Host "✓ $dir directory found" -ForegroundColor Green
        }
        
        $requiredFiles = @("config/project_config.json", "config/.clang-format")
        foreach ($file in $requiredFiles) {
          if (-not (Test-Path $file)) {
            throw "Required file '$file' not found"
          }
          Write-Host "✓ $file found" -ForegroundColor Green
        }
    
    - name: Code Quality Check
      shell: powershell
      run: |
        Write-Host "Running code quality checks..." -ForegroundColor Cyan
        .\scripts\cleanup_code.bat -DryRun
        if ($LASTEXITCODE -ne 0) {
          Write-Warning "Code quality check completed with warnings"
        }
    
    - name: Build All Modules
      shell: powershell
      run: |
        Write-Host "Building all modules..." -ForegroundColor Cyan
        .\scripts\build_all.bat
        if ($LASTEXITCODE -ne 0) {
          throw "Build failed with exit code $LASTEXITCODE"
        }
        
        Write-Host "Verifying build outputs..." -ForegroundColor Cyan
        $expectedDlls = @("ctrl.dll")
        foreach ($dll in $expectedDlls) {
          if (-not (Test-Path $dll)) {
            throw "Expected output '$dll' not found"
          }
          $size = (Get-Item $dll).Length
          Write-Host "✓ $dll built successfully ($size bytes)" -ForegroundColor Green
        }    
    - name: Upload Build Artifacts
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: qspice-modules
        path: |
          *.dll
          build/*.obj
          build/*.map
        retention-days: 30
        
    - name: Upload Build Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          build/
          *.log
        retention-days: 7
